# extracting data
# in python

def loadDF(fname):
	#5 pickup_datetime
	#6 dropoff_datetime
	#7 passenger_count
	#8 trip_time_in_secs
	#9 trip_distance
	#10 pickup_longitude
	#11 pickup_latitude
	#12 dropoff_longitude
	#13 dropoff_latitude
	#datafr = pandas.read_csv(fname, nrows=100000, usecols=[5,9,10,11])
	datafr = pandas.read_csv(fname, usecols=[5,9,10,11])
	print datafr.head()
	return datafr


# Figure 1.
def extractLocDis(datafr):
	df1 = datafr.loc[:,['pickup_longitude','pickup_latitude','trip_distance']].dropna()
	df1 = df1.loc[(df1['pickup_longitude']<-50.) & (df1['pickup_longitude']>-90.) & (df1['pickup_latitude']>20) & (df1['pickup_latitude']<60)]
	#tcfr.loc[(tcfr['Borough']==boroName) & (tcfr['Complaint Type']==typeName)]
	fname = "loc_tripdis.txt"
	df1.to_csv(fname, sep=' ', header=False, index=False)


# Figure 2.
def writeList(L,fname):
	import csv
	with open(fname,"wb") as fout:
		csv.writer(fout,delimiter=' ').writerows(L)

def extractNByDates(datafr):
	df2 = datafr.loc[:,['pickup_datetime']].dropna()
	hour_L = []; dow_L = []; day_L = []; month_L = []
	for datestr in df2['pickup_datetime']:
		dt = datetime.datetime.strptime(datestr,'%Y-%m-%d %H:%M:%S')
		# day_of_week: Monday is 0, Sunday is 6
		hour_L.append(dt.hour)
		dow_L.append(dt.weekday())
		day_L.append(dt.day)
		month_L.append(dt.month)
	hourC_L = Counter(hour_L).most_common()
	dowC_L = Counter(dow_L).most_common()
	dayC_L = Counter(day_L).most_common()
	monthC_L = Counter(month_L).most_common()
	writeList(hourC_L, 'hourC.txt')
	writeList(dowC_L, 'dowC.txt')
	writeList(dayC_L, 'dayC.txt')
	#writeList(monthC_L, 'monthC.txt')

### main ###
 
import pandas
import numpy
from collections import Counter
import datetime

# load
fname="./data/trip_data_1.csv"
datafr = loadDF( fname )
Ntotal = len(datafr.index)

# Figure #1
extractLocDis(datafr)

# Figure #2
extractNByDates(datafr)

# making plots:
# in bash with GMT

# Figure 1
#!/bin/bash

PlotMap() {
	local _fin=$1
	local _bdis=$2
	# compute surface
	ts=0.2

	fintmp=${_fin}
	fbmtmp1=${fintmp}.bm1
	idel=0
	ftobedeleted[idel]=$fbmtmp1; let idel++
	fbmtmp2=${fintmp}.bm2
	ftobedeleted[idel]=$fbmtmp2; let idel++

	blockmean $fintmp $REG -I$_bdis'km' > $fbmtmp1
	blockmean $fbmtmp1 $REG -F -I$_bdis'km' > $fbmtmp2

	fgrd=${fintmp}.grd
	ftobedeleted[idel]=$fgrd; let idel++

	surface $fbmtmp2 -T$ts -G$fgrd -I$res $REG

	# plot starts
	#TXT2CPT_rev $_fin
	#fcpt=${_fin}.cpt
	fcpt=$3

	sms=`echo $res | awk '{print $1/10.0}'`
	fgrds=${fintmp}.grds
	ftobedeleted[idel]=$fgrds; let idel++
	grdsample $fgrd -Q -G$fgrds $REG -I$sms
	grdimage $SCA $REG $fgrds -C$fcpt -O -K >> $psout
	
	pscoast $SCA $REG -A100 -N1/2/80/80/80 -N2/2/80/80/80 -O -K -W3,white >> $psout

	#psxy $fdens -R -J -Sc0.3 -C$fcpt -O -K >> $psout
	psscale -C$fcpt -L -D5./-1./10./0.3h -O -K >> $psout
}


### main ###
lon_range="285.9 286.3"; dlon=0.01
lat_range="40.58 40.90"; dlat=0.01
hdis=1.0
dlab=a0.1f0.02
SCA=-JN286.1/10
res=0.01
bdis1=0.5; bdis2=1.0
#lon_range="270. 308."; dlon=1.0
#lat_range="25.0 55.0"; dlat=1.0
#hdis=100.
#dlab=a10f2
#SCA=-JN286.1/10
#res=1.
#bdis1=20; bdis2=20

fdata=loc_tripdis.txt
fdensdis=`echo $fdata | sed s/'.txt'/'_density.txt'/`
#./MapPointDensity $fdata ${lon_range} ${dlon} ${lat_range} ${dlat} ${hdis} $fdensdis
echo $fdensdis" produced"

# gmt settings
gmtset HEADER_FONT_SIZE 15
gmtset HEADER_OFFSET 0.
gmtset LABEL_FONT_SIZE 12
gmtset ANNOT_FONT_SIZE 10
gmtset BASEMAP_TYPE plain
gmtset PLOT_DEGREE_FORMAT ddd.xxx
gmtset HEADER_FONT_SIZE 15

# plot starts
psout=${fdensdis}.ps
REG=`echo $lon_range $lat_range | awk '{print "-R"$1"/"$2"/"$3"/"$4}'`

# trip density map
fdens=${fdensdis}.dens
ftobedeleted[idel]=$fdens; let idel++
awk '{print $1,$2,$3}' $fdensdis > $fdens
pwd | psxy $REG $SCA -B${dlab}:."Trip Number (no. per km^2 area)":WeSn -X4.5 -Y5.5 -K > $psout
PlotMap $fdens $bdis1 Density.cpt

# average trip distance
fdis=${fdensdis}.dis
ftobedeleted[idel]=$fdis; let idel++
awk '$4>0{print $1,$2,$4}' $fdensdis > $fdis
pwd | psxy $REG $SCA -B${dlab}:."Average Trip Distance (km)":WeSn -X12 -O -K >> $psout
PlotMap $fdis $bdis2 Distance.cpt

# finalize
pwd | psxy -R -J -K -O >> $psout
echo $psout
echo ${ftobedeleted[@]} | xargs rm -f

# Figure 2
#!/bin/bash

PlotCurve() {
	local _fin=$1
	local _REG=$2
	local _XS=$3
	local _YS=$4
	local _style=$5
	local _labels=$6
	local _title=$7

echo $_labels
	psbasemap $_REG -JX12/3 -B${_labels}:."$_title":WeSn -X${_XS} -Y${_YS} -O -K >> $psout
	sort -gk1 $_fin | psxy -R -J -A $_style -O -K >> $psout
}

### main ###

# gmt settings
gmtset HEADER_FONT_SIZE 15
gmtset HEADER_OFFSET -0.3
gmtset LABEL_OFFSET -0.1
gmtset LABEL_FONT_SIZE 12
gmtset ANNOT_FONT_SIZE 10
gmtset BASEMAP_TYPE plain
gmtset PLOT_DEGREE_FORMAT ddd.xxx
gmtset HEADER_FONT_SIZE 15

# start plotting
psout=DateTrends.ps

pwd | psxy -Rg -JX1 -K -P > $psout

PlotCurve ./hourC.txt -R0/24/0/1000000 2.5 17 "-W8,steelblue" 'a4f1:Time_of_The_Day_(#hour):/a500000f100000:No._Trips:'
PlotCurve ./dowC.txt -R-0.5/6.5/1000000/3000000 0 -5 "-Sc0.3 -Gred" 'a1f1:Day_of_The_Week_(0=Monday):/a1000000f200000:No._Trips:'
PlotCurve ./dayC.txt -R0.5/31.5/300000/600000 0 -5 "-W8,forestgreen" 'a5f1:Day_of_The_Month:/a100000f20000:No._Trips:'

pwd | psxy -R -J -O >> $psout
echo $psout
